# 다이나믹 프로그래밍
# 1로 만들기(백준 1463번)

# 입력
# 2

# 출력
# 1

# 입력
# 10

# 출력
# 3

#정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

# X가 3으로 나누어 떨어지면, 3으로 나눈다.
# X가 2로 나누어 떨어지면, 2로 나눈다.
# 1을 뺀다.
# 정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 
# 연산을 사용하는 횟수의 최솟값을 출력하시오.


from sys import stdin

input = stdin.readline

num = int(input())
d = [0] * (num+1) # 1더한 이유: d[1]을 첫 번째인 것처럼 사용하기 위해
# 리스트 안에 값은 counting 횟수
# index가 계산 대상 값

for i in range(1, num+1):
    d[i] = d[i-1] + 1 # 1을 미리 뺀다음에 2혹은 3이랑 나눈 값과 비교후 더 작은 값으로 교체

    if i % 2 == 0:
        d[i] = min(d[i], d[i//2] + 1)

    if i % 3 == 0:
        d[i] = min(d[i], d[i//3] + 1)
